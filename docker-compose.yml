services:
  db:
    image: postgres
    container_name: db_postgres
    environment:
      POSTGRES_USER: gusain
      POSTGRES_PASSWORD: gusain
      POSTGRES_DB: mydatabase
    ports:
      - 5432:5432
    volumes:
      - one_app:/var/lib/one_app/data
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U gusain -d mydatabase" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: abhishek@gusain.com
      PGADMIN_DEFAULT_PASSWORD: gusain
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pg_admin:/var/lib/pg_admin
    networks:
      - app_network
    depends_on:
      - db
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app_network
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app_network
    volumes:
      - kafka_data:/var/lib/kafka/data
    restart: unless-stopped

volumes:
  one_app:
  pg_admin:
  zookeeper_data:
  zookeeper_log:
  kafka_data:

networks:
  app_network:
    driver: bridge